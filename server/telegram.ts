interface TelegramMessage {
  chat_id: string;
  text: string;
  parse_mode?: 'HTML' | 'Markdown';
}

export async function sendTelegramNotification(message: string): Promise<boolean> {
  const botToken = process.env.TELEGRAM_BOT_TOKEN;
  const chatId = process.env.TELEGRAM_CHAT_ID;

  if (!botToken || !chatId) {
    console.warn('Telegram bot credentials not configured. Set TELEGRAM_BOT_TOKEN and TELEGRAM_CHAT_ID environment variables.');
    return false;
  }

  const telegramMessage: TelegramMessage = {
    chat_id: chatId,
    text: message,
    parse_mode: 'HTML'
  };

  try {
    const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(telegramMessage),
    });

    if (!response.ok) {
      const errorData = await response.text();
      // Telegram API error
      return false;
    }

    // Telegram notification sent successfully
    return true;
  } catch (error) {
    // Error sending Telegram notification
    return false;
  }
}

export function formatQuoteRequestMessage(quoteRequest: any): string {
  return `
üîî <b>–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏!</b>

üë§ <b>–ò–º—è:</b> ${quoteRequest.name}
üè¢ <b>–ö–æ–º–ø–∞–Ω–∏—è:</b> ${quoteRequest.company || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
üìß <b>Email:</b> ${quoteRequest.email}
üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${quoteRequest.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üöõ <b>–¢–∏–ø —É—Å–ª—É–≥–∏:</b> ${quoteRequest.serviceType}
üìç <b>–û—Ç–∫—É–¥–∞:</b> ${quoteRequest.sourceCountry || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìç <b>–ö—É–¥–∞:</b> ${quoteRequest.destinationCountry || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

üí∞ <b>–ë—é–¥–∂–µ—Ç:</b> ${quoteRequest.estimatedBudget || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚è∞ <b>–°—Ä–æ–∫–∏:</b> ${quoteRequest.timeline || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}

üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>
${quoteRequest.description || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

<i>–í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: ${new Date().toLocaleString('ru-RU', { timeZone: 'Asia/Dushanbe' })}</i>
  `.trim();
}

export function formatContactMessage(contact: any): string {
  return `
üìß <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞!</b>

üë§ <b>–ò–º—è:</b> ${contact.name}
üìß <b>Email:</b> ${contact.email}
üìã <b>–¢–µ–º–∞:</b> ${contact.subject}

üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
${contact.message}

<i>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString('ru-RU', { timeZone: 'Asia/Dushanbe' })}</i>
  `.trim();
}